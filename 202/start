#!/bin/bash

# user folder
# will be some kind of automation soon, like $0 or so
folder=$0
[ "$folder" = "./start" ] && folder=101

function choosed {
	echo -en "\\r"
	[[ $a1 = 1 ]] && echo -n 1
	[[ $a2 = 1 ]] && echo -n 2
	[[ $a3 = 1 ]] && echo -n 3
	[[ $a4 = 1 ]] && echo -n 4
	[[ $a5 = 1 ]] && echo -n 5
	[[ $a6 = 1 ]] && echo -n 6
	echo -n " ausgewählt, n für next question       "
}


function options {
cat << EOF
Options
you can choose some of the following 
n number of questions 
  (you could also run the programm with 123 as argument)
h show tips and Links to online tests
l show legal
EOF
}

# set some answervariables to 0
function clearanswers { 
	a1=0; a2=0; a3=0; a4=0 ; a5=0; a6=0;
}

# counters
ohno=0
yippieh=0

# in folder question there should be a file for each question with first line containing the answer
# like #001000 for only third option is valid
# like #101010 for first,third, and fifth is correct
# also freetext questions are possible
# first line should be smthg like     #dmesg
# just take a look on the existing questions folder,
# where each question is represented by a file

# todo
# - allow free text questions with alternate answers, like asking for dmesg
# - make many many questions (also from online tests) - make you choose from which , 
# - limit to xy questions per test


# check if help, legal or rnd number of question is wanted
rnd=1000
#if [[ $1 -eq "h" ]]; then
#	options
#	exit 0
#fi
[ x$1 = "xl" ] && cat ./legal && exit 0
[ x$1 = xh ] 		&& options && exit 99
[ x$1 = "x-h" ] 	&& options && exit 99
[ x$1 = "x--help" ] 	&& options && exit 99
if [[ "$1" = +([0-9]) ]]; then rnd=$1; shift ; fi

echo $1 dollar1


# collect number of questions from arguments,
# or take all from questionsfolder
if [ $# != 0 ] ; then
	listall=$(shuf -e $*)
else
	listall=$(shuf -e $(ls $folder)|head -n $rnd)
fi


# get all files from previous generated list
for file in $listall; do
	# print question without comments
	clear
	echo "simple LPIC 1 tester : 1-5 choose item , q quit , n next, o options"
	echo ""
	echo "$(cat ./$folder/$file |grep -v "^#")"
	echo ""
	qtype=single
	grep -qr ^1. ./$folder/$file && qtype=multiple
	correct=$(head -n1 ./$folder/$file|tr -d "#")
	# continously read input
	case $qtype in
		multiple)
			clearanswers ;
			while true; do
				read -rsn1 lastkey
				case $lastkey in
					n)	echo "next (pressed a key)"
						## echo "debug : correct $correct and 1-6 $a1$a2$a3$a4$a5$a6"
						# count point
						[[ $correct == "$a1$a2$a3$a4$a5$a6" ]] && let yippieh+=1 || let ohno+=1 
						[[ $correct == "$a1$a2$a3$a4$a5$a6" ]] || wrongs=$wrongs" "$file
						clearanswers
					       	break ;;	
					q) 	echo you choose exit && exit 99 ;;
					1) [[ $a1 != "1" ]] && a1=1 || a1=0
						choosed ;;
					2) [[ $a2 != "1" ]] && a2=1 || a2=0
						choosed ;;
					3) [[ $a3 != "1" ]] && a3=1 || a3=0
						choosed ;;
					4) [[ $a4 != "1" ]] && a4=1 || a4=0
						choosed ;;
					5) [[ $a5 != "1" ]] && a5=1 || a5=0
						choosed ;;
					6) [[ $a6 != "1" ]] && a6=1 || a6=0
						choosed ;;
					o) clear; options;;
				esac
			done
			;;
		single)
			read keyline
			[[ $correct == $keyline ]] && let yippieh+=1 || let ohno+=1
			[[ $correct == $keyline ]] || wrongs=$wrongs" "$file
			[[ q == $keyline ]] && exit 99
			clearanswers
			;;
	esac
		# debugline
		#		echo correct $correct and 1-6 $a1$a2$a3$a4$a5$a6
	done

	
which xcowsay 1>/dev/null 2>/dev/null && xcowsay "you got $yippieh right an $ohno wrong" || echo you may want to install xcowsay &

# some simple highscore
echo "$(date +%y%m%d-%H%M) $yippieh $ohno $wrongs" >> ./highscore

echo ""
echo "you got $yippieh right an $ohno wrong"
[ $ohno != 0 ] && echo "these where the wrong answers $wrongs"
echo ""
echo "you may restart programm with $0 "
echo "  and one of the (wrong) answers, or with all Wrong answered"
echo "$0 dmesg"
echo "$0 $wrongs"
echo "you may want to start $0 with a number of questions , for example"
echo "$0 3"
